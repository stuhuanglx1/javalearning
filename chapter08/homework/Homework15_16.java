package chapter08.homework;

public class Homework15_16 {
    //homework15
    //什么是多态，多态有哪些具体表现
    /*
    多态：方法或对象具有多种形态，是oop的第三大特征，建立在封装和继承基础之上的
    具体表现：①方法多态--重载、重写
    ②对象多态--(1)对象的编译类型和运行类型可以不一致,编译类型在定义时就确定
    (2)对象的运行类型是可以改变的，通过getClass()方法查看
    (3)编译类型看编译类型等号左边，运行类型看等号右边
     */

    //homework16
    //动态绑定机制/
    /*
    1、当调用对象方法时，该方法会和该对象的内存地址/运行类型进行绑定
    2、当调用属性时，没有动态绑定机制，哪里声明就哪里使用
     */
}
