package chapter08.Object_;

public class object01 {
    /*
    【类Object】
    是类层次的根类。每个类都使用Object作为超类，所有对象（包括数组）都实现这个类方法
    常见方法：
    clone:创建并返回此对象一个副本
    equals:指示某个对象是否与此对象”相等“
    finalize:当垃圾回收器确定不存在该对象的更多引用时，由对象的垃圾回收器调用此方法
    getClass:返回此时的运行类型
    hashCode:返回该对象的哈希码值
    toString:返回该对象的字符串表示

    * equals *
    == 和 equals 的区别：
    ==是一个比较运算符。
    ①既可以判断基本类型，又可以判断引用类型；②如果判断基本类型，判断的是值是否相等；
    ③如果判断的是引用类型，判断的是地址是否相等，即判断是否为同一个对象
    equals是Object类中的方法，只能判断引用类型
    Object默认判断的是地址是否相同，子类往往会重写该方法，用于判断内容是否相等  例如String、Integer

    * hashCode *
    1、提高具有哈希结构容器的效率（哈希容器：hashmap、hashtable、hashset）
    2、两个引用，如果指向的是同一个对象，则哈希值一样
    3、两个引用，如果指向的是不同对象，则哈希值不一样
    4、哈希值主要是根据地址来计算的，但不能等价于地址（会针对不同的对象返回不同的整数）
    5、集合中hashcode如果需要的话也会被重写

    * toString *
    默认返回：全类名(包名+类名) + @ + 哈希值的十六进制
    子类往往重写toString方法，用于查看返回对象属性值
    当直接输出一个对象时，toString方法会被默认调用

    * finalize * --很少使用
    1\当对象被回收时，系统自动调用该对象的finalize方法。子类可重写，做释放资源的操作
    2\什么时候被回收：当对象没有任何引用时，则jvm认为该对象是一个垃圾对象，使用垃圾回收机制销毁该对象，销毁前会先调用finalize方法
    3\垃圾回收机制调用，是由系统来决定的，也可以通过System.gc()主动触发垃圾回收机制
     */
}
