package chapter10.innerclass_;

public class InnerClass_ {
    //内部类
    /*
    基本介绍：一个类内部又嵌套了另一个类结构。被嵌套的类称为内部类，嵌套其他类的称为外部类。
    --类的第五大成员
    ！！最大特点：可以直接访问私有属性，并且可以体现类与类之间的包含关系
    底层语法有大量内部类
    基本语法：
    class Outer{  //外部类
        class Inner{  //内部类

        }
    }
    class Other{}//外部其他类
    内部类分类：
    ·定义在外部类局部位置（比如方法内）·
    1）局部内部类（有类名）   **2）匿名内部类（没有类名，重点！！！！）
    ·定义在外部类的成员位置上·
    1）成员内部类（没有static修饰） 2）静态内部类（static修饰）
    【局部内部类】
    局部内部类是定义在外部类的局部位置，通常在方法，有类名
    1、可以直接访问外部类的所有成员，包括私有的（private）
    2、不能添加访问修饰符，因为他的地位就是一个局部变量，局部变量是不能添加修饰符的，但可以用final修饰（局部变量也可以用final修饰）
    3、作用域：仅在定义的方法或者代码块中
    4、局部内部类--访问 ---> 外部类成员[访问方式：直接访问]
    5、外部类--访问 ---> 局部内部类成员[访问方式：创建对象，再访问（必须在作用域内）]
    6、外部其他类--不能访问  局部内部类的地位是一个局部变量
    7、如果外部类和局部内部类重名时，默认遵循就近原则，如果想访问外部类，则可以使用 外部类名.this.成员 去访问
    原因： 外部类名.this指的是外部类的这个对象，即哪个对象调用就是哪个对象
    总结：①位置：方法、代码块 ②作用域：方法体、代码块 ③本质仍然是类

    【匿名内部类】（在底层的开发中非常重要）
    匿名内部类是定义在外部类的局部位置，比如方法中，并且没有类名
    --本质：类 、 内部类 、 没有名字（系统分配，无法直接看到） 、 同时是一个对象
    基本语法：
    new 类/接口（参数列表）{
        类体
    };
    注意事项：
    1、匿名内部类既是一个类的定义，本身也是一个对象--所以，从语法上看，既有定义类的特征，也有创建对象特征
    2、可以直接访问外部类的所有成员，包括私有的
    3、不能添加访问修饰符（地位==>局部变量）
    4、作用域：定义他的方法或代码块中
    5、匿名内部类--访问  --->  外部类访问[访问方式：直接访问]
    6、外部其他类--不能访问  --->  匿名内部类
    7、如果外部类和内部类重名时，内部类访问遵循就近原则，如果想访问外部类，则可以使用 外部类名.this.成员 去访问
    经典使用场景：当作实参直接传参，间接高效

    【成员内部类】
    成员内部类是定义在外部类的成员位置，且没有static修饰
    1、可以直接访问外部类的所有成员，包含私有的
    2、可以添加任意修饰符，地位相当于一个成员
    3、作用域：为整个类体  --在成员内部类中可以使用外部类的所有成员，包括私有属性
    4、成员内部类--访问  --->  外部类访问[访问方式：直接访问]
    5、外部类--访问  --->  成员内部类[访问方式：创建成员内部类对象，然后使用相关属性或方法]
    6、外部其他类--访问  --->  成员内部类[访问方式：三种方法，详见MemberInnerClass.java]
    7、外部类和内部类成员重名时，内部类访问遵循就近原则，如果想访问外部类，则可以使用 外部类名.this.成员 去访问
    【静态内部类】
    定义在外部类的成员位置，但有static修饰
    1、可以访问外部类的所有静态成员，包括私有的，但不能直接访问非静态成员
    2、可以添加任意的访问修饰符，其地位就是一个成员
    3、作用域：同其他成员，为整个类体
    4、静态内部类--访问 ---> 外部类（静态属性）[访问方式：可以直接访问所有静态成员]
    5、外部类访问--访问 ---> 静态内部类[访问方式：创建对象，再访问]
    6、外部其他类--访问 ---> 静态内部类[2种访问方式，详见StaticInnerClass.java]
    7、外部类和内部类成员重名时，内部类访问遵循就近原则，如果想访问外部类，则可以使用 外部类名.成员 去访问
    【总结】
    （1）内部类有四种：局部内部类、匿名内部类、成员内部类、静态内部类
    （2）匿名内部类是*重点*： new 类\接口（参数列表）{...}
    （3）成员内部类和静态内部类实在成员位置上的，本质就是一个成员
     */
}
